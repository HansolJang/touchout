package kr.jroad.touchout.activity;

import java.util.ArrayList;

import kr.jroad.touchout.adapter.ReviewListAdapter;
import kr.jroad.touchout.adapter.StoreInfoImageAdapter;
import kr.jroad.touchout.data.ReviewItem;
import kr.jroad.touchout.data.ReviewResult;
import kr.jroad.touchout.data.SortingStore;
import kr.jroad.touchout.data.SubImageResult;
import kr.jroad.touchout.fragment.HomeAllStoreFragment;
import kr.jroad.touchout.manager.NetworkManager;
import kr.jroad.touchout.manager.NetworkManager.OnResultListener;
import kr.jroad.touchout.view.ReviewListHeaderView;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.v4.view.ViewPager;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;

import com.handmark.pulltorefresh.library.PullToRefreshListView;
import com.viewpagerindicator.CirclePageIndicator;
import com.viewpagerindicator.PageIndicator;

public class StoreInfoActivity extends ActionBarActivity {

	ListView reviewList;
	ReviewListAdapter reviewAdapter;
	ReviewListHeaderView reviewHeaderView;
	PullToRefreshListView pullView;

	ViewPager storeImagePager;
	StoreInfoImageAdapter storeImageAdapter;
	PageIndicator mIndicator;
	CirclePageIndicator indicator;
	
	ArrayList<String> subImage = new ArrayList<String>();

	TextView addressView;
	TextView phoneView;
	ImageView phoneIconView;

	SortingStore store;
	ActionBar actionBar;

	int storeId;

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_store_info);
		actionBar = getSupportActionBar();
		actionBar.setHomeButtonEnabled(true);

		pullView = (PullToRefreshListView) findViewById(R.id.review_list);
		reviewHeaderView = new ReviewListHeaderView(StoreInfoActivity.this);
		reviewList = pullView.getRefreshableView();
		reviewList.addHeaderView(reviewHeaderView);
		reviewAdapter = new ReviewListAdapter(StoreInfoActivity.this);
		
		storeImagePager = (ViewPager) reviewHeaderView
				.findViewById(R.id.store_info_pager);
		// 이미지 받아오기
		getSubImage();
		
		indicator = (CirclePageIndicator) findViewById(R.id.store_info_indicator);
		mIndicator = indicator;
		
		addressView = (TextView) reviewHeaderView
				.findViewById(R.id.store_info_address_txt);
		phoneView = (TextView) reviewHeaderView
				.findViewById(R.id.store_info_phone_txt);
		phoneIconView = (ImageView) reviewHeaderView
				.findViewById(R.id.store_info_phone_icon);
		phoneIconView.setImageResource(R.drawable.ic_launcher);

		// 받아온 store 객체로 뿌림
		Intent storeInfo = getIntent();
		store = storeInfo
				.getParcelableExtra(HomeAllStoreFragment.SELECTED_STORE);
		if (store != null) {
			addressView.setText(store.address);
			phoneView.setText(store.phone);
			actionBar.setTitle(store.name);
			storeId = store.store_id;

		}
		phoneIconView.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				// 매장 정보가 있으면
				if (store != null) {
					Intent i = new Intent(Intent.ACTION_CALL, Uri.parse("tel:"
							+ store.phone));
					startActivity(i);
				}
			}
		});

		Button btnMap = (Button) findViewById(R.id.store_info_show_map_btn);
		btnMap.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent i = new Intent(StoreInfoActivity.this, MapActivity.class);
				// 위도경도 putextra 해야함!!
				startActivity(i);
			}
		});

		Button btnWriteReview = (Button) reviewHeaderView
				.findViewById(R.id.store_info_write_review_btn);
		btnWriteReview.setOnClickListener(new View.OnClickListener() {

			@Override
			public void onClick(View v) {
				// 리뷰 작성 완료되면 리뷰 생성하고 리스트 새로고침
				Intent i = new Intent(StoreInfoActivity.this,
						WriteReviewActivity.class);
				startActivity(i);
			}
		});

		reviewList.setAdapter(reviewAdapter);

		getReviewData();

	}

	// storeId 받아와야함!
	private void getReviewData() {
		NetworkManager.getInstance().getReviewData(this, storeId, 1,
				new OnResultListener<ReviewResult>() {

					@Override
					public void onSuccess(ReviewResult result) {
						reviewAdapter.clear();
						for (ReviewItem data : result.result.items) {
							reviewAdapter.add(data);
						}
					}

					@Override
					public void onFail(int code) {
						// TODO Auto-generated method stub

					}
				});
	}

	private void getSubImage() {
		NetworkManager.getInstance().getSubImage(this, storeId,
				new OnResultListener<SubImageResult>() {

					@Override
					public void onSuccess(SubImageResult result) {
						if (result.success == 1) {
							subImage = result.result.items;
							if (subImage.size() != 0) {
								storeImageAdapter = new StoreInfoImageAdapter(
										getSupportFragmentManager(), subImage);
								storeImagePager.setAdapter(storeImageAdapter);
								indicator.setViewPager(storeImagePager);
								indicator.setSnap(true);
							}
						}
					}

					@Override
					public void onFail(int code) {
						// TODO Auto-generated method stub

					}
				});
	}
	
	@Override
	protected void onResume() {
		super.onResume();
		getReviewData();
	}

}
