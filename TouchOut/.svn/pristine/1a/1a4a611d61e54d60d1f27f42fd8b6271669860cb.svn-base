package kr.jroad.touchout.fragment;

import kr.jroad.touchout.activity.R;
import kr.jroad.touchout.activity.StoreMenuActivity;
import kr.jroad.touchout.adapter.SortingStoreListAdapter;
import kr.jroad.touchout.data.SortingStore;
import kr.jroad.touchout.data.SortingStoreResult;
import kr.jroad.touchout.manager.NetworkManager;
import kr.jroad.touchout.manager.NetworkManager.OnResultListener;
import kr.jroad.touchout.view.SortingStoreActionBar;
import kr.jroad.touchout.view.SortingStoreListHeaderAdsView;
import kr.jroad.touchout.view.SortingStoreListHeaderResultView;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class HomeAllStoreFragment extends Fragment {

	ListView allStoreList;
	SortingStoreListAdapter allStoreAdapter;
	String storeName;
	int searchResult;
	TextView resultView;
	ActionBar actionBar;

	float longitude = (float) 27.235;
	float latitude = (float) 124.352;

	public static final String SELECTED_STORE = "selectedStore";
	public static final String SELECTED_PLACE_TAG = "choiceDialogTag";
	public static final String REQUEST_SEARCH_TAB = "requestSearchTab";
	public static final int REQUEST_SEARCH_CODE = 333;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		setHasOptionsMenu(true);
		super.onCreate(savedInstanceState);
		
		actionBar = ((ActionBarActivity) getActivity()).getSupportActionBar();
		actionBar.setDisplayShowCustomEnabled(true);
		actionBar.setCustomView(R.layout.actionbar_sorting_store);
	}

	@Override
	public View onCreateView(LayoutInflater inflater,
			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
		return inflater.inflate(R.layout.fragment_home_all_store_list,
				container, false);
	}

	@Override
	public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {
		super.onViewCreated(view, savedInstanceState);

		SortingStoreActionBar actionBarView = new SortingStoreActionBar(
				getActivity());
		actionBar.setTitle("");
		actionBar.setIcon(R.drawable.stamped);
		actionBar.setHomeButtonEnabled(true);

		allStoreList = (ListView) view.findViewById(R.id.sorting_store_list);
		SortingStoreListHeaderAdsView adsHeaderView = new SortingStoreListHeaderAdsView(
				getActivity());
		SortingStoreListHeaderResultView resultHeaderView = new SortingStoreListHeaderResultView(
				getActivity());

		adsHeaderView.setClickable(false);
		resultHeaderView.setClickable(false);

		// 결과에 따라 set해줘야함
		resultView = (TextView) resultHeaderView
				.findViewById(R.id.sorting_store_result_txt);

		allStoreList.addHeaderView(adsHeaderView, "adsHeader", false);
		allStoreList.addHeaderView(resultHeaderView, "searchResultHeader",
				false);

		allStoreAdapter = new SortingStoreListAdapter(getActivity());

		allStoreList.setAdapter(allStoreAdapter);

		allStoreList.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				Intent i = new Intent(getActivity(), StoreMenuActivity.class);
				Toast.makeText(getActivity(), "item clicked!",
						Toast.LENGTH_SHORT).show();
				// parcelable sorting store
				SortingStore d = (SortingStore) allStoreList
						.getItemAtPosition(position);
				i.putExtra(SELECTED_STORE, d);
				getActivity().startActivity(i);
			}
		});
		initData();

	}

	// int 0 => all
	// 현재 위치정보 필요!
	private void initData() {
		NetworkManager.getInstance().getSortingStore(getActivity(), 0,
				latitude, longitude, 1, "distance",
				new OnResultListener<SortingStoreResult>() {

					@Override
					public void onSuccess(SortingStoreResult result) {
						if (result.success == 1) {
							searchResult = result.result.item_cnt;
							resultView.setText("총 검색결과는 " + searchResult
									+ "개 입니다.");
							allStoreAdapter.clear();
							for (SortingStore d : result.result.items) {
								allStoreAdapter.add(d);
							}
						}
					}

					@Override
					public void onFail(int code) {
						// TODO Auto-generated method stub

					}
				});
	}

	MenuItem menuSorting, subMenuDistance, subMenuPopular;

	@Override
	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
		super.onCreateOptionsMenu(menu, inflater);
		inflater.inflate(R.menu.sorting_store_menu, menu);

		menuSorting = menu.findItem(R.id.menu_sorting);
		// subMenuDistance = menu.findItem(R.id.menu_sub_sorting_distance);
		// subMenuPopular = menu.findItem(R.id.menu_sub_sorting_popular);
	}

	/*
	 * 옵션메뉴가 아니라 액션바의 메뉴가 눌리면 다이얼로그가 뜨도록 수정해야함
	 */
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		if (item.getItemId() == R.id.menu_sorting) {
			menuSorting.setTitle("거리순");

		}
		return super.onOptionsItemSelected(item);
	}

}
